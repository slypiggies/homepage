{"version":3,"sources":["App.js","index.js"],"names":["App","STRINGS","useState","row","setRow","column","setColumn","blink","setBlink","useEffect","interval","setInterval","tRow","tColumn","tBlink","length","NUM_BLINKS","update","clearInterval","className","substring","Math","floor","ReactDOM","render","document","getElementById"],"mappings":"kMAyEeA,MAtEf,WACE,IAOMC,EAAU,CACd,YACA,uBACA,kBACA,gBACA,wBAGF,EAAsBC,mBAZL,GAYjB,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BF,oBAZR,GAYpB,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,oBAZP,GAYnB,mBAAOK,EAAP,KAAcC,EAAd,KAuCA,OAXAC,qBAAU,WACR,IAAMC,EAAWC,aAAY,YA3BhB,WACb,IAAIC,EAAOT,EACPU,EAAUR,EACVS,EAASP,EAETM,EAAUZ,EAAQW,GAAMG,SAC1BF,GAAoB,GAElBA,IAAYZ,EAAQW,GAAMG,QAEbC,MADfF,GAAkB,KAEhBD,GA1Bc,EA2BdC,GA1Ba,GA2BbF,GAAc,KACDX,EAAQc,SACnBH,EA/BS,IAqCfR,EAAOQ,GACPN,EAAUO,GACVL,EAASM,GAKPG,KA/CU,KAiDZ,OAAO,kBAAMC,cAAcR,OAQ3B,sBAAKS,UAAU,MAAf,UACE,sDACA,cAAC,IAAD,UACE,KAAOlB,EAAQE,GAAKiB,UAAU,EAAGf,EAAS,IAPvCA,EAASJ,EAAQE,GAAKY,QAAUM,KAAKC,MAAMf,EAnD3B,GAmDuD,IAAM,EAQ5E,IACA,OAEN,2CC/DNgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fb9e18e5.chunk.js","sourcesContent":["import Cowsay from 'react-cowsay';\nimport {useEffect, useState} from 'react';\n\nfunction App() {\n  const DELAY = 120;\n  const NUM_BLINKS = 6;\n  const BLINK_NUM_DELAYS = 4;\n  const INIT_ROW = 0;\n  const INIT_COLUMN = -2;\n  const INIT_BLINK = -1;\n  \n  const STRINGS = [\n    'am Kenny.',\n    'come from Hong Kong.',\n    'am an engineer.',\n    'am not a cow.',\n    'like playing Tetris.',\n  ];\n  \n  const [row, setRow] = useState(INIT_ROW);\n  const [column, setColumn] = useState(INIT_COLUMN);\n  const [blink, setBlink] = useState(INIT_BLINK);\n  \n  const update = () => {\n    let tRow = row;\n    let tColumn = column;\n    let tBlink = blink;\n    \n    if (tColumn < STRINGS[tRow].length) {\n      tColumn = tColumn + 1;\n    }\n    if (tColumn === STRINGS[tRow].length) {\n      tBlink = tBlink + 1;\n      if (tBlink === NUM_BLINKS * BLINK_NUM_DELAYS) {\n        tColumn = INIT_COLUMN;\n        tBlink = INIT_BLINK;\n        tRow = tRow + 1;\n        if (tRow === STRINGS.length) {\n          tRow = INIT_ROW;\n        }\n      }\n    }\n    \n    // Transact.\n    setRow(tRow);\n    setColumn(tColumn);\n    setBlink(tBlink);\n  };\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      update();\n    }, DELAY);\n    return () => clearInterval(interval);\n  });\n  \n  const showCursor = () => {\n    return column < STRINGS[row].length || Math.floor(blink / BLINK_NUM_DELAYS) % 2 === 0;\n  }\n  \n  return (\n    <div className='App'>\n      <h1>Kenny Lam's Homepage</h1>\n      <Cowsay>{\n        'I ' + STRINGS[row].substring(0, column + 1) + (showCursor()\n          ? '|'\n          : ' ')\n      }</Cowsay>\n      <p>Hello!</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}